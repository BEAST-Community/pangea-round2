install.packages("manipulate")
install.packages(c("ape", "phangorn", "network", "deSolve", "simecol", "magrittr", "ggplot2", "lubridate", "adephylo", "phylobase", "Rcpp", "RcppParallel"))
install.packages("RcppOctave")
install.packages("RcppOctave")
library(ape)
library(phylobase)
library(adephylo)
library(phangorn)
library(phytools)
library(magrittr)
datadir <- "150227_PANGEAsim_Regional_Train1"
gag <- read.dna(paste(datadir,"150227_HPTN071_TRAIN1_SIMULATED_gag.fa",sep="/"),format="fasta",as.matrix=TRUE)
pol <- read.dna(paste(datadir,"150227_HPTN071_TRAIN1_SIMULATED_pol.fa",sep="/"),format="fasta",as.matrix=TRUE)
env <- read.dna(paste(datadir,"150227_HPTN071_TRAIN1_SIMULATED_env.fa",sep="/"),format="fasta",as.matrix=TRUE)
s <- cbind(gag,pol,env)
st <- row.names(s) %>% strsplit(.,"|",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
setwd("~/")
setwd("~/Projects/pangea-round2/training")
datadir <- "150227_PANGEAsim_Regional_Train1"
gag <- read.dna(paste(datadir,"150227_HPTN071_TRAIN1_SIMULATED_gag.fa",sep="/"),format="fasta",as.matrix=TRUE)
pol <- read.dna(paste(datadir,"150227_HPTN071_TRAIN1_SIMULATED_pol.fa",sep="/"),format="fasta",as.matrix=TRUE)
env <- read.dna(paste(datadir,"150227_HPTN071_TRAIN1_SIMULATED_env.fa",sep="/"),format="fasta",as.matrix=TRUE)
s <- cbind(gag,pol,env)
st <- row.names(s) %>% strsplit(.,"|",fixed=TRUE) %>% lapply(.,tail,1) %>% unlist %>% as.double
s2 <- s
s2.names <- row.names(s) %>% strsplit(.,"|",fixed=TRUE) %>% lapply(.,"[",1) %>% unlist
paste(s2.names,st)
paste(s2.names,st,sep="_")
row.names(s2) <- paste(s2.names,st,sep="_")
write.dna(s2,"train.fas",format="fasta",nbcol=-1,colsep="")
row.names(s2) <- s2.names # paste(s2.names,st,sep="_")
tr <- read.tree("ExaML_result.train")
tr.root <- midpoint(tr)
tr.ltt <- ltt.plot(tr.root)
tr.multi <- di2multi(tr.root,0.005)
library(network)
library(sna)
tr.multi.net <- network(tr.multi$edge,directed=FALSE,loops=FALSE)
tr.multi.deg <- degree(tr.multi.net)
table(tr.multi.deg) # rather oddly, this doubles the degree
tr.multi.root <- seq(1,length(tr.multi.deg))[tr.multi.deg>100]
tr.multi.root.edges <- tr.multi$edge[tr.multi$edge[,1]==tr.multi.root|tr.multi$edge[,2]==tr.multi.root,]
tr.multi.root.alters <- unique(sort(tr.multi.root.edges))
tr.multi.root.alters <- tr.multi.root.alters[tr.multi.root.alters!=tr.multi.root]
clusterlist <- list()
nroots <- length(tr.multi.root.alters)
ntips <- length(tr.multi$tip.label)
for(i in 1:nroots){
alldesc <- getDescendants(tr.multi,tr.multi.root.alters[i])
clusterlist[[i]] <- alldesc[alldesc<=ntips]
}
lapply(clusterlist,length) %>% unlist %>% table
library(XML)
setwd("~/Projects/pangea-round2/training")
beast <- xmlParse("beast_train.xml")
beast
getNodeSet(beast,"alignment")
getNodeSet(beast,"beast/taxa")
getNodeSet(beast,"/beast/taxa")
```
alignment <- getNodeSet(beast,"/beast/alignment")
alignment
patterns <- getNodeSet(beast,"/beast/patterns")
patterns
coalescentTree <- getNodeSet(beast,"/beast/coalescentTree")
coalescentTree
coalescentSimulator <- getNodeSet(beast,"/beast/coalescentSimulator")
treeModel <- getNodeSet(beast,"/beast/treeModel")
coalescentSimulator
treeModel
coalescentLikelihood <- getNodeSet(beast,"/beast/coalescentLikelihood")
treeLikelihood <- getNodeSet(beast,"/beast/treeLikelihood")
coalescentLikelihood
treeLikelihood
operators <- getNodeSet(beast,"/beast/operators")
operators
likelihood <- getNodeSet(beast,"/beast/mcmc/posterior/likelihood")
likelihood
taxa
taxa <- getNodeSet(beast,"/beast/taxa")
taxa
xmlChildren(taxa)
sapply(taxa,xmlGetAttr,"idref")
xpathApply(taxa,"//taxon","idref")
xpathApply(taxa,"//taxon")
install.packages("XiMpLe")
library(XiMpLe)
beast <- parseXMLTree("beast_train.xml")
gag.pmllist <- list()
pol.pmllist <- list()
env.pmllist <- list()
idxlist <- list()
idx <- 1
for(i in 1:numtrees){
setwd("~/Projects/pangea-round2/training")
setwd("~/Projects/pangea-round2/training")
beast <- xmlParse("beast_train.xml")
library(XML)
beast <- xmlParse("beast_train.xml")
taxa <- getNodeSet(beast,"/beast/taxa")
taxa
